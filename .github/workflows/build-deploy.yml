name: Build + Deploy

on:
  push:
    branches: [master]

jobs:
  build-web:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Docker Login
        uses: azure/docker-login@v1
        with:
          login-server: docker.pkg.github.com
          username: $GITHUB_ACTOR
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build the Docker image
        run: docker build . --file Dockerfile --tag docker.pkg.github.com/mattcroberts/metrix/metrix-web:$(git rev-parse --short "$GITHUB_SHA")
        working-directory: ./packages/web
      - name: Push image to registry
        run: docker push docker.pkg.github.com/mattcroberts/metrix/metrix-web:$(git rev-parse --short "$GITHUB_SHA")

  build-api:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Docker Login
        uses: azure/docker-login@v1
        with:
          login-server: docker.pkg.github.com
          username: $GITHUB_ACTOR
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build the Docker image
        run: docker build . --file Dockerfile --tag docker.pkg.github.com/mattcroberts/metrix/metrix-api:$(git rev-parse --short "$GITHUB_SHA")
        working-directory: ./packages/api
      - name: Push image to registry
        run: docker push docker.pkg.github.com/mattcroberts/metrix/metrix-api:$(git rev-parse --short "$GITHUB_SHA")

  deploy:
    runs-on: ubuntu-latest
    needs: ['build-web', 'build-api']

    steps:
      - uses: actions/checkout@v2
      - name: Create env
        run: |
          echo '${{ secrets.FIREBASE_CREDENTIALS}}' > firebase-credentials.json
          cat > env.sh <<- EOM
            export METRIX_TAG="$(git rev-parse --short "$GITHUB_SHA")"
            export METRIX_POSTGRES_USERNAME="${{ secrets.METRIX_POSTGRES_USERNAME }}"
            export METRIX_POSTGRES_PASSWORD="${{ secrets.METRIX_POSTGRES_PASSWORD }}"
            export METRIX_POSTGRES_DB_NAME="${{ secrets.METRIX_POSTGRES_DB_NAME }}"
            export METRIX_JWT_SECRET="${{ secrets.METRIX_JWT_SECRET }}"
            export METRIX_GOOGLE_CLIENT_ID="${{ secrets.METRIX_GOOGLE_CLIENT_ID }}"
            export METRIX_GOOGLE_CLIENT_SECRET="${{ secrets.METRIX_GOOGLE_CLIENT_SECRET }}"
            export METRIX_UI_HOST="https://irix.dev/metrix"
            export METRIX_API_PATH="https://irix.dev/metrix/api"
          EOM
      - name: SCP Files
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.DO_HOST }}
          username: ${{ secrets.DO_USERNAME }}
          port: ${{ secrets.SSH_PORT }}
          key: ${{ secrets.DO_KEY }}
          source: 'docker-compose.yml,env.sh,deploy.sh,firebase-credentials.json'
          target: 'metrix'
      - uses: webfactory/ssh-agent@v0.2.0
        with:
          ssh-private-key: ${{ secrets.DO_KEY }}
      - name: Run deploy
        run: ssh -o StrictHostKeyChecking=no ${{ secrets.DO_USERNAME }}@${{ secrets.DO_HOST }} "/bin/bash ./deploy.sh && ./metrix/deploy.sh"
